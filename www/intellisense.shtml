<title>Using Semantic Bovinator for Intellisense</title>

<!--#include file="rightcol.php"-->

<h1>Setting up Semantic for Intellisense</h1>

<p>Semantic can be set up to have Intellisense like behavior for C and
C++.  It also works for Java, but too much of Java is in core
libraries Semantic does not (yet) have access to to be a complete
solution.

<p>Here is the quick-and-dirty setup for semantic:

<pre>
(setq semantic-load-turn-useful-things-on t)
(require 'semantic-load)
</pre>

<p>These two lines set up two important aspects of intellisense like
behavior.

<ol>
<li> semanticdb is enabled.  This allows symbol lookup between files.
<li> eldoc is enabled.  This shows prototypes in the mode line.
</ol>

<p>Unfortunately, eldoc is a good solution for Functional languages, and
local definitions.  Not always for a complete structured or object
oriented program.

<p>To be more complete, you need to specify a project directory for
semanticdb.

<pre>
(setq semanticdb-project-roots
      (list "/path/to/project/one"
            "/path/to/project/two"))
</pre>

<p>This tells semanticdb which databases to references when looking up
symbols from a given file.  Only the root of a given project need be
specified.  
<a href="ede.shtml">EDE</a> will set these up for you automatically.

<p>The next step is to force Emacs to parse all your files into
  databases.  Unfortunately, this is currently best done by just
  visiting all the files you care about, and letting semantic parse
  them.  Once you have visited all such files, execute:

<pre>
M-x semanticdb-save-all-db
</pre>

<p>which will write out the databases for use in future sessions.
The database will be saved when you exit too, but I like saving my DB
occasionally so information isn't lost in a crash or other problem.

<p>Lastly, call

<pre>
M-x semantic-speedbar-analysis
</pre>

<p>which will now be able to analyze the cursor location, and provide
intelligent references.  Sometimes you need to press <tt>g</tt> to
force an update.

<h2>Semantic Analyzer FAQ</h2>

Quastions are for C/C++:

<pre>
Q) When I type the name of a struct or class and press "." nothing
   happens:

A) The context analyzer has a bug that requires at least on symbol
   character to appear after the "." and before the end of the
   function context.  It could be a part of the symbol completing, or
   just some other command on another line.

Q) I've typed in a new function, and the analyzer does nothing or
   throws an error.

A) The new code must be parsed by semantic at least once to identify
   that you are in a function.  You can force this to occur using
   the command "M-x bovinate RET".

   All syntax surrounding the types you are attempting to complete in
   must also be syntactically correct.

Q) How does semantic choose the available completions?

A) It first attempts to determine the type for the local context as
   an assignment, argument to a function, or other.

   Second, it parses the current reference, such as "c->f".

   It determines the type of "c", and collects a list of available
   members.  It then filters all those members starting with "f" in
   this case, and filters again to only those members of the desired
   type.

</pre>
